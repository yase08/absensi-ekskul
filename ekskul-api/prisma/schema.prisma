generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Activity {
  id                 Int                  @id @default(autoincrement())
  rombelId           Int
  roomId             Int
  ekskulId           Int
  Ekskul             Ekskul               @relation(fields: [ekskulId], references: [id])
  Rombel             Rombel               @relation(fields: [rombelId], references: [id])
  Room               Room                 @relation(fields: [roomId], references: [id])
  ActivityOnSchedule ActivityOnSchedule[]
}

model ActivityOnSchedule {
  activityId Int
  scheduleId Int
  Activity   Activity @relation(fields: [activityId], references: [id])
  Schedule   Schedule @relation(fields: [scheduleId], references: [id])

  @@id([activityId, scheduleId])
}

model ActivityProgram {
  id        Int      @id @default(autoincrement())
  activity  String
  task      String
  startDate String
  endDate   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Announcement {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  authorId    Int
  image       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  User        User     @relation(fields: [authorId], references: [id])
}

model Assessment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Attendance {
  id        Int                @id @default(autoincrement())
  category  CategoryAttendance
  siswaId   Int
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt
  date      String?
  berak     String
  Student   Student            @relation(fields: [siswaId], references: [id])
}

model Ekskul {
  id             Int              @id @default(autoincrement())
  category       CategoryEkskul
  name           String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  Activity       Activity[]
  Gallery        Gallery[]
  StudentOnEskul StudentOnEskul[]
  UserOnEkskul   UserOnEkskul[]
}

model Gallery {
  id             Int              @id @default(autoincrement())
  ekskulId       Int
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  date           String
  name           String
  Ekskul         Ekskul           @relation(fields: [ekskulId], references: [id])
  GalleryOnImage GalleryOnImage[]
}

model GalleryImage {
  id             Int              @id @default(autoincrement())
  url            String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  GalleryOnImage GalleryOnImage[]
}

model GalleryOnImage {
  galleryId      Int
  galleryImageId Int
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  Gallery        Gallery      @relation(fields: [galleryId], references: [id])
  GalleryImage   GalleryImage @relation(fields: [galleryImageId], references: [id])

  @@id([galleryId, galleryImageId])
}

model InstructorAttendance {
  id           Int                @id @default(autoincrement())
  category     CategoryAttendance
  instructorId Int
  createdAt    DateTime           @default(now())
  updatedAt    DateTime           @updatedAt
  User         User               @relation(fields: [instructorId], references: [id])
}

model Permission {
  id               Int                @id @default(autoincrement())
  name             String
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  RoleOnPermission RoleOnPermission[]
}

model Rayon {
  id        Int       @id @default(autoincrement())
  name      String
  Student   Student[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Role {
  id               Int                @id @default(autoincrement())
  name             String
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  RoleOnPermission RoleOnPermission[]
  User             User?
}

model RoleOnPermission {
  roleId       Int
  permissionId Int
  Permission   Permission @relation(fields: [permissionId], references: [id])
  Role         Role       @relation(fields: [roleId], references: [id])

  @@id([roleId, permissionId])
}

model Rombel {
  id        Int        @id @default(autoincrement())
  name      String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Activity  Activity[]
  Student   Student[]
}

model Room {
  id        Int        @id @default(autoincrement())
  name      String
  Activity  Activity[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Schedule {
  id                 Int                  @id @default(autoincrement())
  day                String
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  time               String
  ActivityOnSchedule ActivityOnSchedule[]
}

model Student {
  id             Int              @id @default(autoincrement())
  name           String
  nis            String           @unique
  email          String
  mobileNumber   String
  rombelId       Int
  rayonId        Int
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  Attendance     Attendance[]
  Rayon          Rayon            @relation(fields: [rayonId], references: [id])
  Rombel         Rombel           @relation(fields: [rombelId], references: [id])
  StudentOnEskul StudentOnEskul[]
}

model StudentOnEskul {
  studentId Int
  ekskulId  Int
  Ekskul    Ekskul  @relation(fields: [ekskulId], references: [id])
  Student   Student @relation(fields: [studentId], references: [id])

  @@id([studentId, ekskulId])
}

model User {
  id                   Int                    @id @default(autoincrement())
  email                String                 @unique
  name                 String                 @unique
  nis                  String?
  mobileNumber         String?
  password             String
  image                String?
  roleId               Int                    @unique
  passwordChangedAt    DateTime?              @db.Timestamptz(3)
  passwordResetToken   String?
  passwordResetExpires DateTime?              @db.Timestamptz(3)
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
  Announcement         Announcement[]
  InstructorAttendance InstructorAttendance[]
  Role                 Role                   @relation(fields: [roleId], references: [id])
  UserOnEkskul         UserOnEkskul[]
}

model UserOnEkskul {
  userId   Int
  ekskulId Int
  Ekskul   Ekskul @relation(fields: [ekskulId], references: [id])
  User     User   @relation(fields: [userId], references: [id])

  @@id([userId, ekskulId])
}

enum CategoryAttendance {
  HADIR
  SAKIT
  IZIN
  ALPA
}

enum CategoryEkskul {
  PRODUKTIF
  UMUM
  SENBUD
}
